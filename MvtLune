void LaLune() {
  hs = (heure)/24;
  float ja = 365.25*(Year-1901)+jour;
  NbJour = floor(ja+IncMensuel[Mois])+hs;
  float p = 4.9085+(0.00000081856)*NbJour;
  LongSolMoy = 4.8689+(.0172027914)*NbJour;
  float  mSol = LongSolMoy-p;
  println("M Sol : "+mSol);
  float LongMoyLu = .57999+.229971503*NbJour;
  float o = 4.1867-(.00092422)*NbJour;
 float m = .3193+.228027135*NbJour;
  float D = LongMoyLu-LongSolMoy;
  float f = LongMoyLu-o;
  float l = LongMoyLu+.1098*sin(m)+.003728*sin(2*m)+.01149*sin(2*D);
  l = l-.003329*sin(mSol)+.02224*sin(D-m)-.001945*sin(2*f);
  l = l+.001026*sin(2*D-2*m)+0.00099829*sin(2*D-m-mSol);
  l = l+0.000990299*sin(2*D+m)+.0008011*sin(2*D-mSol);
  LongLune = l+.0007156*sin(m-mSol)-.0005323*sin(m+mSol)-.0006074*sin(D);
  int rdent = floor(LongLune/(2*PI));
  LongLune = LongLune-rdent*(2*PI);
  if (LongLune<0) {
    LongLune = LongLune+(2*PI);
  }
  println("LongLune :   "+180*LongLune/PI);
  stepLune=floor(map(LongLune, 0, 2*PI, 0, 512));

  // On calcule de combien doit avancer le moteur par rapport à
  // l'avance précédente 
  currentStepLune=stepLune-previousStepLune;
  //Pour le passage de 12h à 0h
  if (currentStepLune<0) {
    currentStepLune=512+currentStepLune;
  }
  // println("StepLune : "+step+"   "+currentStepLune+" ");

  if (currentStepLune>0) {
    previousStepLune=stepLune;
    //String PS = str(previousStep);
    //String[] list =split(PS, ' ');
    //saveStrings("LastPosition.txt", list);
  }
  count=0;
  while ( count<currentStepLune) {
    for (int step=3; step>=0; step--) {
      delay(10 );

      switch(step) { 
      case 0:
        GPIO.digitalWrite(controlPinLune[0], GPIO.HIGH);   
        GPIO.digitalWrite(controlPinLune[1], GPIO.HIGH); 
        GPIO.digitalWrite(controlPinLune[2], GPIO.LOW); 
        GPIO.digitalWrite(controlPinLune[3], GPIO.LOW); 
        break;  
      case 1:
        GPIO.digitalWrite(controlPinLune[0], GPIO.HIGH);   
        GPIO.digitalWrite(controlPinLune[1], GPIO.LOW); 
        GPIO.digitalWrite(controlPinLune[2], GPIO.LOW); 
        GPIO.digitalWrite(controlPinLune[3], GPIO.HIGH); 
        break;  
      case 2:
        GPIO.digitalWrite(controlPinLune[0], GPIO.LOW);   
        GPIO.digitalWrite(controlPinLune[1], GPIO.LOW); 
        GPIO.digitalWrite(controlPinLune[2], GPIO.HIGH); 
        GPIO.digitalWrite(controlPinLune[3], GPIO.HIGH); 
        break;  
      case 3:
        GPIO.digitalWrite(controlPinLune[0], GPIO.LOW);   
        GPIO.digitalWrite(controlPinLune[1], GPIO.HIGH); 
        GPIO.digitalWrite(controlPinLune[2], GPIO.HIGH); 
        GPIO.digitalWrite(controlPinLune[3], GPIO.LOW); 
        break;
      }
    }
    count++;
  }
  for (int pin=0; pin<4; pin++) {   
    GPIO.digitalWrite(controlPinLune[pin], GPIO.LOW);
  }
}
void PositionSoleil() {
  //HeureTU = hour();
  //Minute = float(minute());
  //float jour = day();
  //int Mois = month();

  //Year = year();
  hs = (heure)/24;
  float ja = 365.25*(Year-1901)+jour;

  NbJour = floor(ja+IncMensuel[Mois])+hs;
  float p = 4.9085+(0.00000081856)*NbJour;
  LongSolMoy = 4.8689+(.0172027914)*NbJour;
  float  m = LongSolMoy-p;
  mSol = m;
  println("M Sol : "+mSol);
}
